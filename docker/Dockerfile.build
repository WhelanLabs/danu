# Base Windows Server Core Image
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set working directory
WORKDIR /app

# Consolidate all steps into a single RUN instruction
RUN powershell -Command `
  # Configure DNS and test connectivity; `
  Set-DnsClientServerAddress -InterfaceAlias Ethernet* -ServerAddresses ("8.8.8.8", "8.8.4.4"); `
  Write-Host 'Testing DNS resolution...'; `
  Test-NetConnection chocolatey.org -Port 443; `
  `
  # Install Chocolatey; `
  Set-ExecutionPolicy Bypass -Scope Process -Force; `
  [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
  iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')); `
  `
  # Install OpenJDK; `
  choco install openjdk -y --params="'/InstallationPath:C:\java'"; `
  refreshenv; `
  Write-Host 'JAVA_HOME:' $env:JAVA_HOME; `
  Write-Host 'PATH:' $env:PATH; `
  `
  # Install Gradle; `
  choco install gradle -y; `
  `
  # Download and install NSIS; `
  Copy-Item -Path '.\\download\\nsis-3.10-setup.exe' -Destination '.\\nsis-setup.exe'; `
  Start-Process -FilePath '.\\nsis-setup.exe' -ArgumentList '/S' -NoNewWindow -Wait; `
  Remove-Item -Force '.\\nsis-setup.exe'; `
  `
  # Copy application files; `
  Copy-Item -Path '.' -Destination '/app' -Recurse; `
  `
  # Set environment variables; `
  $env:GRADLE_COMPOSE_IMAGE_CMD = "gradle createBaseDiskImage --info --stacktrace"; `
  $env:GRADLE_BUILD_INSTALLER_CMD = "gradle createInstaller --info --stacktrace"; `
  $env:SOLR_CMD = "installer_image\\solr-8.11.4\\bin\\solr.cmd stop -p 8983"; `
  `
  # Run Gradle command to create base disk image; `
  Write-Host 'Running: $env:GRADLE_COMPOSE_IMAGE_CMD'; `
  Invoke-Expression $env:GRADLE_COMPOSE_IMAGE_CMD; `
  if ($LASTEXITCODE -ne 0) { `
    Write-Host 'Gradle compose image command failed.'; `
    exit 1; `
  } `
  `
  # Stop Solr; `
  Write-Host 'Running: $env:SOLR_CMD'; `
  Invoke-Expression $env:SOLR_CMD; `
  if ($LASTEXITCODE -ne 0) { `
    Write-Host 'Stop Solr command failed.'; `
    exit 1; `
  } `
  `
  # Build installer; `
  Write-Host 'Running: $env:GRADLE_BUILD_INSTALLER_CMD'; `
  Invoke-Expression $env:GRADLE_BUILD_INSTALLER_CMD; `
  if ($LASTEXITCODE -ne 0) { `
    Write-Host 'Gradle build command failed.'; `
    exit 1; `
  } `
  `
  # Inspect all generated files; `
  Get-ChildItem -Recurse -File | ForEach-Object { Write-Host $_.FullName }

# Final CMD
CMD ["cmd", "/c", "echo Build completed successfully."]
